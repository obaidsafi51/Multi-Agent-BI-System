[tool:pytest]
# Pytest configuration for MCP Schema Management tests

# Test discovery
testpaths = tests
python_files = test_mcp_*.py test_dynamic_*.py
python_classes = Test*
python_functions = test_*

# Markers
markers =
    unit: Unit tests for individual components
    integration: Integration tests with mocked dependencies
    e2e: End-to-end tests with complete workflows
    real_server: Tests that require a real MCP server instance
    benchmark: Performance benchmark tests
    compatibility: Backward compatibility tests
    slow: Tests that take a long time to run
    network: Tests that require network access

# Output options
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --showlocals
    --durations=10
    --cov=backend.schema_management
    --cov-report=term-missing
    --cov-report=html:htmlcov/mcp
    --cov-fail-under=80

# Timeout settings
timeout = 300
timeout_method = thread

# Asyncio settings
asyncio_mode = auto

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:aiohttp.*

# Test collection
collect_ignore = [
    "setup.py",
    "conftest.py"
]

# Minimum version
minversion = 6.0